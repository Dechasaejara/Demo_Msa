{"version":3,"sources":["layouts/header/data.js","layouts/Footer.js","layouts/header/Header.js","pages/Layout.js","layouts/Form.js","controls/Button.js","controls/Input.js","controls/Select.js","redux/api/index.js","utils/index.js","layouts/Popup.js","layouts/Table.js","components/Order/OrderList.js","layouts/Notification.js","components/Order/SearchFoodItems.js","components/Order/OrderedFoodItems.js","components/Order/OrderForm.js","hooks/useForm.js","components/Order/index.js","pages/HomePage.js","redux/constants.js","components/foods/OOrderList.js","redux/actions/orderActions.js","pages/About.js","components/admin/CustomerForm.js","redux/actions/userActions.js","components/admin/Customer.js","pages/admin/CustomerPage.js","redux/actions/foodActions.js","components/admin/FoodsForm.js","components/admin/Foods.js","pages/admin/FoodsPage.js","App.js","reportWebVitals.js","redux/reducers/foodReducer.js","redux/reducers/userReducer.js","redux/reducers/orderReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["links","id","url","text","social","icon","Footer","Container","align","Typography","variant","color","Link","href","Date","getFullYear","className","map","socialIcon","Navbar","useState","showLinks","setShowLinks","linksContainerRef","useRef","linksRef","useEffect","linksHeight","current","getBoundingClientRect","height","style","onClick","ref","link","Layout","Header","useStyles","makeStyles","theme","root","width","margin","spacing","Form","props","classes","children","other","noValidate","autoComplete","textTransform","Button","Input","name","label","value","onChange","error","TextField","helperText","Select","varient","options","FormControl","InputLabel","item","MenuItem","title","FormHelperText","ENDPIONTS","createAPIEndpoint","endpoint","fetchAll","axios","get","fetchById","create","newRecord","post","update","updatedRecord","put","delete","roundTo2DecimalPoint","Math","round","Number","EPSILON","dialogWrapper","padding","position","top","dialogTitle","paddingRight","Popup","openPopup","setOpenPopup","Dialog","open","maxWidth","paper","DialogTitle","display","component","flexGrow","IconButton","DialogContent","dividers","table","fontWeight","backgroundColor","cursor","border","Table","OrderList","setOrderId","setOrderListVisibility","resetFormControls","setNotify","orderList","setOrderList","then","res","data","catch","err","console","log","showForUpdate","TableHead","TableRow","TableCell","TableBody","e","orderMasterId","orderNumber","customer","customerName","pMethod","gTotal","window","confirm","isOpen","message","Notification","notify","handleClose","event","reason","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","Alert","searchPaper","alignItems","searchInput","marginLeft","flex","listRoot","marginTop","maxHeight","overflow","SearchFoodItems","values","setValues","orderedFoodItems","orderDetails","foodItems","setFoodItems","searchList","setSearchList","searchKey","setSearchKey","x","filter","y","foodItemName","toLowerCase","includes","toLocaleLowerCase","every","foodItemId","addFoodItem","foodItem","orderDetailId","quantity","foodItemPrice","price","Paper","InputBase","target","placeholder","List","idx","ListItem","ListItemText","primary","secondary","src","foodMainImgSrc","srcSet","alt","loading","ListItemSecondaryAction","paperRoot","buttonGroup","borderRadius","minWidth","fontSize","deleteButton","totalPerItem","OrderedFoodItems","updateQuantity","length","primaryTypographyProps","textAlign","fontStyle","ButtonGroup","size","disabled","secondaryTypographyProps","disableRipple","index","_","i","deletedOrderItemIds","removeFoodItem","pMethods","adornmentText","submitButtonGroup","OrderForm","errors","setErrors","handleInputChange","customerList","setCustomerList","orderListVisibility","orderId","customerID","concat","reduce","tempTotal","JSON","stringify","onSubmit","preventDefault","temp","customerId","Object","validateForm","Grid","container","xs","InputProps","startAdornment","InputAdornment","type","startIcon","useForm","getFreshModelObject","floor","random","toString","Order","HomePage","gutterBottom","Action_Types","mapActionToProps","fetchAllorder","dispatch","response","payload","deleteOrder","connect","state","orderReducer","list","setCurrentId","Edit","Delete","alert","About","OOrderList","initialValues","CreateUser","onSucess","updateUser","userReducer","Classes","currentId","find","validate","fetchAllusers","deleteUser","TableContainer","hover","Avatar","customerAvator","avatorImgSrc","CustomerPage","refresh","foodMainImgName","CreateFood","updateFood","foodList","foodReducer","fetchAllfoods","deleteFood","FoodsPage","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducers","combineReducers","action","middlware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4e68eda.chunk.js","sourcesContent":["import React from 'react'\nimport { FaBehance, FaFacebook, FaLinkedin, FaTwitter } from 'react-icons/fa'\nexport const links = [\n  {\n    id: 1,\n    url: '/',\n    text: 'home',\n  },\n  {\n    id: 2,\n    url: '/admin/foods',\n    text: 'foods',\n  },\n  {\n    id: 3,\n    url: '/admin/customers',\n    text: 'customer',\n  },\n  {\n    id: 4,\n    url: '/about',\n    text: 'about',\n  }\n  \n\n]\n\nexport const social = [\n  {\n    id: 1,\n    url: 'https://www.twitter.com',\n    icon: <FaFacebook />,\n  },\n  {\n    id: 2,\n    url: 'https://www.twitter.com',\n    icon: <FaTwitter />,\n  },\n  {\n    id: 3,\n    url: 'https://www.twitter.com',\n    icon: <FaLinkedin />,\n  },\n  {\n    id: 4,\n    url: 'https://www.twitter.com',\n    icon: <FaBehance />,\n  },\n]\n","import * as React from 'react'\nimport Typography from '@mui/material/Typography'\nimport Container from '@mui/material/Container'\nimport Link from '@mui/material/Link'\nimport { social } from './header/data'\n\nexport default function Footer() {\n  return (\n    <Container align=\"center\">\n      <Typography variant=\"body2\" color=\"text.secondary\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"/\">\n          ምሳ\n        </Link>{' '}\n        {new Date().getFullYear()}\n        <ul className=\"social-icons\" align='center'>\n          {social.map((socialIcon) => {\n            const { id, url, icon } = socialIcon\n            return (\n              <li key={id} className='d-flex'>\n                <a href={url}>{icon}</a>\n              </li>\n            )\n          })}\n        </ul>\n      </Typography>\n    </Container>\n  )\n}\n","import React, { useState, useRef, useEffect } from 'react'\nimport { FaBars } from 'react-icons/fa'\n// import logo from './logo.svg'\nimport { links, social } from './data'\n\nconst Navbar = () => {\n  const [showLinks, setShowLinks] = useState(false)\n  const linksContainerRef = useRef(null)\n  const linksRef = useRef(null)\n  const toggleLinks = () => {\n    setShowLinks(!showLinks)\n  }\n  useEffect(() => {\n    const linksHeight = linksRef.current.getBoundingClientRect().height\n    if (showLinks) {\n      linksContainerRef.current.style.height = `${linksHeight}px`\n    } else {\n      linksContainerRef.current.style.height = '0px'\n    }\n  }, [showLinks])\n  return (\n    <nav>\n      <div className=\"nav-center\">\n        <div className=\"nav-header\">\n          {/* <img src={logo} className=\"logo\" alt=\"logo\" /> */}\n          <button className=\"nav-toggle\" onClick={toggleLinks}>\n            <FaBars />\n          </button>\n        </div>\n        <div className=\"links-container\" ref={linksContainerRef}>\n          <ul className=\"links\" ref={linksRef}>\n            {links.map((link) => {\n              const { id, url, text } = link\n              return (\n                <li key={id}>\n                  <a href={url}>{text}</a>\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar\n","import React from 'react'\nimport Footer from '../layouts/Footer'\nimport Header from '../layouts/header/Header'\n\nimport { Outlet } from 'react-router-dom'\n\nexport default function Layout() {\n  return (\n    <div className=\"layoutcontainer\">\n\n      <Header />\n      <Outlet />\n      <Footer />\n    </div>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& .MuiFormControl-root': {\n            width: '90%',\n            margin: theme.spacing(1)\n        }\n    }\n}))\n\nexport default function Form(props) {\n    const classes = useStyles();\n    const { children, ...other } = props;\n\n\n    return (\n        <form className={classes.root} noValidate autoComplete=\"off\" {...other}>\n            {children}\n        </form>\n    )\n}\n","import React from 'react'\nimport { Button as MuiButton, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: theme.spacing(1),\n        '& .MuiButton-label': {\n            textTransform: 'none'\n        }\n    }\n}))\n\nexport default function Button(props) {\n\n    const { children, color, variant, onClick, className, ...other } = props;\n    const classes = useStyles();\n\n    return (\n        <MuiButton\n            className={classes.root + ' ' + (className || '')}\n            variant={variant || \"contained\"}\n            color={color || \"default\"}\n            onClick={onClick}\n            {...other}>\n            {children}\n        </MuiButton>\n    )\n}\n","import React from 'react'\nimport { TextField } from '@material-ui/core';\n\nexport default function Input(props) {\n\n    const { name, label, value, variant, onChange, error = null, ...other } = props;\n    return (\n        <TextField\n            variant={variant || \"outlined\"}\n            label={label}\n            name={name}\n            value={value}\n            onChange={onChange}\n            {...other}\n            {...(error && { error: true, helperText: error })}\n        />\n    )\n}\n","import React from 'react'\nimport { FormControl, InputLabel, Select as MuiSelect, MenuItem, FormHelperText } from '@material-ui/core';\n\nexport default function Select(props) {\n\n    const { name, label, value, varient, onChange, options, error = null } = props;\n\n    return (\n        <FormControl\n            variant={varient || \"outlined\"}\n            {...(error && { error: true })}>\n            <InputLabel>{label}</InputLabel>\n            <MuiSelect\n                label={label}\n                name={name}\n                value={value}\n                onChange={onChange}>\n                {\n                    options.map(\n                        item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\n                    )\n                }\n            </MuiSelect>\n            {error && <FormHelperText>{error}</FormHelperText>}\n        </FormControl>\n    )\n}\n","import axios from 'axios'\n\nconst BASE_URL = 'http://localhost:5110/api/'\n\nexport const ENDPIONTS = {\n  CUSTOMER: 'Customer',\n  FOODITEM: 'FoodItem',\n  ORDER: 'Order',\n}\n\n\nexport const createAPIEndpoint = (endpoint) => {\n  let url = BASE_URL + endpoint + '/'\n  return {\n    fetchAll: () => axios.get(url),\n    fetchById: (id) => axios.get(url + id),\n    create: (newRecord) => axios.post(url, newRecord),\n    update: (id, updatedRecord) => axios.put(url + id, updatedRecord),\n    delete: (id) => axios.delete(url + id),\n  }\n}\n","export const roundTo2DecimalPoint = value => Math.round((value + Number.EPSILON) * 100) / 100;","import React from 'react'\nimport { Dialog, DialogTitle, DialogContent, makeStyles, Typography, IconButton } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles(theme => ({\n    dialogWrapper: {\n        padding: theme.spacing(2),\n        position: 'absolute',\n        top: theme.spacing(5)\n    },\n    dialogTitle: {\n        paddingRight: '0px'\n    }\n}))\n\nexport default function Popup(props) {\n\n    const { title, children, openPopup, setOpenPopup } = props;\n    const classes = useStyles();\n\n    return (\n        <Dialog open={openPopup} maxWidth=\"md\" classes={{ paper: classes.dialogWrapper }}>\n            <DialogTitle className={classes.dialogTitle}>\n                <div style={{ display: 'flex' }}>\n                    <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\n                        {title}\n                    </Typography>\n                    <IconButton\n                        onClick={() => { setOpenPopup(false) }}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </DialogTitle>\n            <DialogContent dividers>\n                {children}\n            </DialogContent>\n        </Dialog>\n    )\n}","import React from 'react'\nimport { Table as MuiTable, makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles(() => ({\n    table: {\n        '& tbody td': {\n            fontWeight: '300',\n        },\n        '& tbody tr:hover': {\n            backgroundColor: '#fffbf2',\n            cursor: 'pointer',\n        },\n        '& .MuiTableCell-root': {\n            border: 'none'\n        }\n    },\n}));\n\nexport default function Table(props) {\n\n    const classes = useStyles();\n\n    return (\n        <MuiTable className={classes.table}>\n            {props.children}\n        </MuiTable>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport { createAPIEndpoint, ENDPIONTS } from '../../redux/api/index'\nimport Table from '../../layouts/Table'\nimport { TableHead, TableRow, TableCell, TableBody } from '@material-ui/core'\nimport DeleteOutlineTwoToneIcon from '@material-ui/icons/DeleteOutlineTwoTone'\n\nexport default function OrderList(props) {\n  const { setOrderId, setOrderListVisibility, resetFormControls, setNotify } =\n    props\n\n  const [orderList, setOrderList] = useState([])\n\n  useEffect(() => {\n    createAPIEndpoint(ENDPIONTS.ORDER)\n      .fetchAll()\n      .then((res) => {\n        setOrderList(res.data)\n      })\n      .catch((err) => console.log(err))\n  }, [])\n\n  const showForUpdate = (id) => {\n    setOrderId(id)\n    setOrderListVisibility(false)\n  }\n\n  const deleteOrder = (id) => {\n    if (window.confirm('Are you sure to delete this record?')) {\n      createAPIEndpoint(ENDPIONTS.ORDER)\n        .delete(id)\n        .then((res) => {\n          setOrderListVisibility(false)\n          setOrderId(0)\n          resetFormControls()\n          setNotify({ isOpen: true, message: 'Deleted successfully.' })\n        })\n        .catch((err) => console.log(err))\n    }\n  }\n\n  return (\n    <>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Order No.</TableCell>\n            <TableCell>Customer</TableCell>\n            <TableCell>Payed With</TableCell>\n            <TableCell>Grand Total</TableCell>\n            <TableCell></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {orderList.map((item) => (\n            <TableRow key={item.orderMasterId}>\n              <TableCell onClick={(e) => showForUpdate(item.orderMasterId)}>\n                {item.orderNumber}\n              </TableCell>\n              <TableCell onClick={(e) => showForUpdate(item.orderMasterId)}>\n                {item.customer.customerName}\n              </TableCell>\n              <TableCell onClick={(e) => showForUpdate(item.orderMasterId)}>\n                {item.pMethod}\n              </TableCell>\n              <TableCell onClick={(e) => showForUpdate(item.orderMasterId)}>\n                {item.gTotal}\n              </TableCell>\n              <TableCell>\n                <DeleteOutlineTwoToneIcon\n                  color=\"secondary\"\n                  onClick={(e) => deleteOrder(item.orderMasterId)}\n                />\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </>\n  )\n}\n","import React from 'react'\nimport { Snackbar, makeStyles } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        top: theme.spacing(9),\n        '& .MuiAlert-root': {\n            backgroundColor: '#f3b33d',\n            color: '#000'\n        },\n        '& .MuiAlert-icon': {\n            color: '#000'\n        }\n    }\n}))\n\nexport default function Notification(props) {\n\n    const { notify, setNotify } = props;\n    const classes = useStyles()\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setNotify({\n            ...notify,\n            isOpen: false\n        })\n    }\n\n    return (\n        <Snackbar\n            autoHideDuration={3000}\n            className={classes.root}\n            open={notify.isOpen}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            onClose={handleClose}>\n            <Alert\n                onClose={handleClose}>\n                {notify.message}\n            </Alert>\n        </Snackbar>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport { createAPIEndpoint, ENDPIONTS } from '../../redux/api/index'\nimport {\n  Image,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n  InputBase,\n  IconButton,\n  makeStyles,\n  ListItemSecondaryAction,\n} from '@material-ui/core'\nimport SearchTwoToneIcon from '@material-ui/icons/SearchTwoTone'\nimport PlusOneIcon from '@material-ui/icons/PlusOne'\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos'\n\nconst useStyles = makeStyles((theme) => ({\n  searchPaper: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  searchInput: {\n    marginLeft: theme.spacing(1.5),\n    flex: 1,\n  },\n  listRoot: {\n    marginTop: theme.spacing(1),\n    maxHeight: 450,\n    overflow: 'auto',\n    '& li:hover': {\n      cursor: 'pointer',\n      backgroundColor: '#E3E3E3',\n    },\n    '& li:hover .MuiButtonBase-root': {\n      display: 'block',\n      color: '#000',\n    },\n    '& .MuiButtonBase-root': {\n      display: 'none',\n    },\n    '& .MuiButtonBase-root:hover': {\n      backgroundColor: 'transparent',\n    },\n  },\n}))\n\nexport default function SearchFoodItems(props) {\n  const { values, setValues } = props\n  let orderedFoodItems = values.orderDetails\n\n  const [foodItems, setFoodItems] = useState([])\n  const [searchList, setSearchList] = useState([])\n  const [searchKey, setSearchKey] = useState('')\n  const classes = useStyles()\n\n  useEffect(() => {\n    createAPIEndpoint(ENDPIONTS.FOODITEM)\n      .fetchAll()\n      .then((res) => {\n        setFoodItems(res.data)\n        setSearchList(res.data)\n      })\n      .catch((err) => console.log(err))\n  }, [])\n\n  useEffect(() => {\n    let x = [...foodItems]\n    x = x.filter((y) => {\n      return (\n        y.foodItemName.toLowerCase().includes(searchKey.toLocaleLowerCase()) &&\n        orderedFoodItems.every((item) => item.foodItemId != y.foodItemId)\n      )\n    })\n    setSearchList(x)\n  }, [searchKey, orderedFoodItems])\n\n  const addFoodItem = (foodItem) => {\n    let x = {\n      orderMasterId: values.orderMasterId,\n      orderDetailId: 0,\n      foodItemId: foodItem.foodItemId,\n      quantity: 1,\n      foodItemPrice: foodItem.price,\n      foodItemName: foodItem.foodItemName,\n    }\n    setValues({\n      ...values,\n      orderDetails: [...values.orderDetails, x],\n    })\n  }\n\n  return (\n    <>\n      <Paper className={classes.searchPaper}>\n        <InputBase\n          className={classes.searchInput}\n          value={searchKey}\n          onChange={(e) => setSearchKey(e.target.value)}\n          placeholder=\"Search food items\"\n        />\n        <IconButton>\n          <SearchTwoToneIcon />\n        </IconButton>\n      </Paper>\n      <List className={classes.listRoot}>\n        {searchList.map((item, idx) => (\n          <ListItem key={idx} onClick={(e) => addFoodItem(item)}>\n            <ListItemText\n              primary={item.foodItemName}\n              secondary={'$' + item.price}\n            />\n            <img\n              src={`${item.foodMainImgSrc}?w=248&fit=crop&auto=format`}\n              srcSet={`${item.foodMainImgSrc}?w=248&fit=crop&auto=format&dpr=2 2x`}\n              alt={item.foodItemName}\n              loading=\"lazy\"\n            />\n            <ListItemSecondaryAction>\n              <IconButton onClick={(e) => addFoodItem(item)}>\n                <PlusOneIcon />\n                <ArrowForwardIosIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n    </>\n  )\n}\n","import React from 'react'\nimport { List, ListItemText, Paper, ListItem, ListItemSecondaryAction, IconButton, ButtonGroup, Button, makeStyles } from '@material-ui/core';\nimport DeleteTwoToneIcon from '@material-ui/icons/DeleteTwoTone';\nimport { roundTo2DecimalPoint } from \"../../utils\";\n\nconst useStyles = makeStyles(theme => ({\n    paperRoot: {\n        margin: '15px 0px',\n        '&:hover': {\n            cursor: 'pointer'\n        },\n        '&:hover $deleteButton': {\n            display: 'block'\n        }\n    },\n    buttonGroup: {\n        backgroundColor: '#E3E3E3',\n        borderRadius: 8,\n        '& .MuiButtonBase-root ': {\n            border: 'none',\n            minWidth: '25px',\n            padding: '1px'\n        },\n        '& button:nth-child(2)': {\n            fontSize: '1.2em',\n            color: '#000'\n        }\n    },\n    deleteButton: {\n        display: 'none',\n        '& .MuiButtonBase-root': {\n            color: '#E81719'\n        },\n    },\n    totalPerItem: {\n        fontWeight: 'bolder',\n        fontSize: '1.2em',\n        margin: '0px 10px'\n    }\n}))\n\nexport default function OrderedFoodItems(props) {\n\n    const { values, setValues } = props;\n    const classes = useStyles();\n\n    let orderedFoodItems = values.orderDetails;\n\n    const removeFoodItem = (index, id) => {\n        debugger;\n        let x = { ...values };\n        x.orderDetails = x.orderDetails.filter((_, i) => i != index);\n        if (id != 0)\n            x.deletedOrderItemIds += id + ',';\n        setValues({ ...x });\n    }\n\n    const updateQuantity = (idx, value) => {\n        let x = { ...values };\n        let foodItem = x.orderDetails[idx];\n        if (foodItem.quantity + value > 0) {\n            foodItem.quantity += value;\n            setValues({ ...x });\n        }\n    }\n\n    return (\n        <List>\n            {orderedFoodItems.length == 0 ?\n                <ListItem>\n                    <ListItemText\n                        primary=\"Please select food items\"\n                        primaryTypographyProps={{\n                            style: {\n                                textAlign: 'center',\n                                fontStyle: 'italic'\n                            }\n                        }}\n                    />\n                </ListItem>\n                : orderedFoodItems.map((item, idx) => (\n                    <Paper key={idx} className={classes.paperRoot}>\n                        <ListItem>\n                            <ListItemText\n                                primary={item.foodItemName}\n                                primaryTypographyProps={{\n                                    component: 'h1',\n                                    style: {\n                                        fontWeight: '500',\n                                        fontSize: '1.2em'\n                                    }\n                                }}\n                                secondary={\n                                    <>\n                                        <ButtonGroup\n                                            className={classes.buttonGroup}\n                                            size=\"small\">\n                                            <Button\n                                                onClick={e => updateQuantity(idx, -1)}\n                                            >-</Button>\n                                            <Button\n                                                disabled\n                                            >{item.quantity}</Button>\n                                            <Button\n                                                onClick={e => updateQuantity(idx, 1)}\n                                            >+</Button>\n                                        </ButtonGroup>\n                                        <span className={classes.totalPerItem}>\n                                            {'$' + roundTo2DecimalPoint(item.quantity * item.foodItemPrice)}\n                                        </span>\n                                    </>\n                                }\n                                secondaryTypographyProps={{\n                                    component: 'div'\n                                }}\n                            />\n                            <ListItemSecondaryAction\n                                className={classes.deleteButton}>\n                                <IconButton\n                                    disableRipple\n                                    onClick={e => removeFoodItem(idx, item.orderDetailId)}\n                                >\n                                    <DeleteTwoToneIcon />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                    </Paper>\n                ))\n            }\n        </List>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport Form from '../../layouts/Form'\nimport {\n  Grid,\n  InputAdornment,\n  makeStyles,\n  ButtonGroup,\n  Button as MuiButton,\n} from '@material-ui/core'\nimport { Input, Select, Button } from '../../controls'\nimport ReplayIcon from '@material-ui/icons/Replay'\nimport ReorderIcon from '@material-ui/icons/Reorder'\nimport { createAPIEndpoint, ENDPIONTS } from '../../redux/api/index'\nimport { roundTo2DecimalPoint } from '../../utils'\nimport Popup from '../../layouts/Popup'\nimport OrderList from './OrderList'\nimport Notification from '../../layouts/Notification'\nimport SearchFoodItems from './SearchFoodItems'\nimport OrderedFoodItems from './OrderedFoodItems'\n\nconst pMethods = [\n  { id: 'none', title: 'Select' },\n  { id: 'Cash', title: 'Cash' },\n  { id: 'Card', title: 'Card' },\n]\n\nconst useStyles = makeStyles((theme) => ({\n  adornmentText: {\n    '& .MuiTypography-root': {\n      color: '#718568',\n      fontWeight: 'bolder',\n      fontSize: '1.5em',\n    },\n  },\n  submitButtonGroup: {\n    backgroundColor: '#718568',\n    color: '#000',\n    margin: theme.spacing(1),\n    '& .MuiButton-label': {\n      textTransform: 'none',\n    },\n    '&:hover': {\n      backgroundColor: '#f3b33d',\n    },\n  },\n}))\n\nexport default function OrderForm(props) {\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetFormControls,\n  } = props\n  const classes = useStyles()\n\n  const [customerList, setCustomerList] = useState([])\n  const [orderListVisibility, setOrderListVisibility] = useState(false)\n  const [orderId, setOrderId] = useState(0)\n  const [notify, setNotify] = useState({ isOpen: false })\n\n  useEffect(() => {\n    createAPIEndpoint(ENDPIONTS.CUSTOMER)\n      .fetchAll()\n      .then((res) => {\n        let customerList = res.data.map((item) => ({\n          id: item.customerID,\n          title: item.customerName,\n        }))\n        customerList = [{ id: 0, title: 'Select' }].concat(customerList)\n        setCustomerList(customerList)\n      })\n      .catch((err) => console.log(err))\n  }, [customerList])\n\n  useEffect(() => {\n    let gTotal = values.orderDetails.reduce((tempTotal, item) => {\n      return tempTotal + item.quantity * item.foodItemPrice\n    }, 0)\n    setValues({\n      ...values,\n      gTotal: roundTo2DecimalPoint(gTotal),\n    })\n  }, [JSON.stringify(values.orderDetails)])\n\n  useEffect(() => {\n    if (orderId == 0) resetFormControls()\n    else {\n      createAPIEndpoint(ENDPIONTS.ORDER)\n        .fetchById(orderId)\n        .then((res) => {\n          setValues(res.data)\n          setErrors({})\n        })\n        .catch((err) => console.log(err))\n    }\n  }, [orderId])\n\n  const validateForm = () => {\n    let temp = {}\n    temp.customerId = values.customerId != 0 ? '' : 'This field is required.'\n    temp.pMethod = values.pMethod != 'none' ? '' : 'This field is required.'\n    temp.orderDetails =\n      values.orderDetails.length != 0 ? '' : 'This field is required.'\n    setErrors({ ...temp })\n    return Object.values(temp).every((x) => x === '')\n  }\n\n  const resetForm = () => {\n    resetFormControls()\n    setOrderId(0)\n  }\n\n  const submitOrder = (e) => {\n    e.preventDefault()\n    if (validateForm()) {\n      if (values.orderMasterId == 0) {\n        createAPIEndpoint(ENDPIONTS.ORDER)\n          .create(values)\n          .then((res) => {\n            resetFormControls()\n            setNotify({ isOpen: true, message: 'New order is created.' })\n          })\n          .catch((err) => console.log(err))\n      } else {\n        createAPIEndpoint(ENDPIONTS.ORDER)\n          .update(values.orderMasterId, values)\n          .then((res) => {\n            setOrderId(0)\n            setNotify({ isOpen: true, message: 'The order is updated.' })\n          })\n          .catch((err) => console.log(err))\n      }\n    }\n  }\n\n  const openListOfOrders = () => {\n    setOrderListVisibility(true)\n  }\n\n  return (\n    <>\n      <Form onSubmit={submitOrder}>\n        <Grid container>\n          <Grid item xs={6}>\n            <Input\n              disabled\n              label=\"Order Number\"\n              name=\"orderNumber\"\n              value={values.orderNumber}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment\n                    className={classes.adornmentText}\n                    position=\"start\"\n                  >\n                    #\n                  </InputAdornment>\n                ),\n              }}\n            />\n            <Select\n              label=\"Customer\"\n              name=\"customerId\"\n              value={values.customerId}\n              onChange={handleInputChange}\n              options={customerList}\n              error={errors.customerId}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <Select\n              label=\"Payment Method\"\n              name=\"pMethod\"\n              value={values.pMethod}\n              onChange={handleInputChange}\n              options={pMethods}\n              error={errors.pMethod}\n            />\n            <Input\n              disabled\n              label=\"Grand Total\"\n              name=\"gTotal\"\n              value={values.gTotal}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment\n                    className={classes.adornmentText}\n                    position=\"start\"\n                  >\n                    $\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <SearchFoodItems\n              {...{\n                values,\n                setValues,\n              }}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <OrderedFoodItems\n              {...{\n                values,\n                setValues,\n              }}\n            />\n          </Grid>\n\n          <ButtonGroup className={classes.submitButtonGroup}>\n            <MuiButton size=\"large\" type=\"submit\">\n              Order Now\n            </MuiButton>\n            <MuiButton\n              size=\"small\"\n              onClick={resetForm}\n              startIcon={<ReplayIcon />}\n            />\n          </ButtonGroup>\n          <Button\n            size=\"large\"\n            onClick={openListOfOrders}\n            startIcon={<ReorderIcon />}\n          >\n            Orders\n          </Button>\n        </Grid>\n      </Form>\n      <Popup\n        title=\"List of Orders\"\n        openPopup={orderListVisibility}\n        setOpenPopup={setOrderListVisibility}\n      >\n        <OrderList\n          {...{\n            setOrderId,\n            setOrderListVisibility,\n            resetFormControls,\n            setNotify,\n          }}\n        />\n      </Popup>\n      <Notification {...{ notify, setNotify }} />\n    </>\n  )\n}\n","import React, { useState } from 'react'\n\nexport function useForm(getFreshModelObject) {\n  const [values, setValues] = useState(getFreshModelObject)\n  const [errors, setErrors] = useState({})\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target\n    setValues({\n      ...values,\n      [name]: value,\n    })\n  }\n\n  const resetFormControls = () => {\n    setValues(getFreshModelObject)\n    setErrors({})\n  }\n\n  return {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetFormControls,\n  }\n}\n","import React from 'react'\nimport OrderForm from './OrderForm'\nimport { useForm } from '../../hooks/useForm';\nimport { Grid } from '@material-ui/core';\n\nconst generateOrderNumber = () => Math.floor(100000 + Math.random() * 900000).toString();\n\nconst getFreshModelObject = () => ({\n    orderMasterId: 0,\n    orderNumber: generateOrderNumber(),\n    customerId: 0,\n    pMethod: 'none',\n    gTotal: 0,\n    deletedOrderItemIds: '',\n    orderDetails: []\n})\n\n\nexport default function Order() {\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetFormControls\n    } = useForm(getFreshModelObject);\n\n    return (\n        <Grid container spacing={2}>\n            <Grid item xs={12}>\n                <OrderForm\n                    {...{\n                        values,\n                        setValues,\n                        errors,\n                        setErrors,\n                        handleInputChange,\n                        resetFormControls\n                    }}\n                />\n            </Grid>\n        </Grid>\n    )\n}\n","import { Typography } from '@material-ui/core'\nimport React from 'react'\nimport Order from '../components/Order'\n\nexport default function HomePage() {\n  return (\n    <>\n      <Typography gutterBottom variant=\"h2\" align=\"center\">\n        ምሳ\n      </Typography>\n      <Order />\n    </>\n  )\n}\n","export const Action_Types = {\n  CREATE_FOOD: 'CREATE_FOOD',\n  UPDATE_FOOD: 'UPDATE_FOOD',\n  DELETE_FOOD: 'DELETE_FOOD',\n  FETCH_ALL_FOOD: 'FETCH_ALL_FOOD',\n  FETCH_SINGLE_FOOD: 'FETCH_SINGLE_FOOD',\n\n  CREATE_USER: 'CREATE_USER',\n  UPDATE_USER: 'UPDATE_USER',\n  DELETE_USER: 'DELETE_USER',\n  FETCH_ALL_USER: 'FETCH_ALL_USER',\n  FETCH_SINGLE_USER: 'FETCH_SINGLE_USER',\n\n  CREATE_ORDER: 'CREATE_ORDER',\n  UPDATE_ORDER: 'UPDATE_ORDER',\n  DELETE_ORDER: 'DELETE_ORDER',\n  FETCH_ALL_ORDER: 'FETCH_ALL_ORDER',\n  FETCH_SINGLE_ORDER: 'FETCH_SINGLE_ORDER',\n}\n","import React, { useState, useEffect } from 'react'\nimport Table from '../../layouts/Table'\nimport {\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  ButtonGroup,\n} from '@material-ui/core'\nimport { Button } from '@material-ui/core'\nimport { Delete, Edit } from '@mui/icons-material'\nimport { connect } from 'react-redux'\nimport * as actions from '../../redux/actions/orderActions'\n\nfunction OrderList(props) {\n  const [currentId, setCurrentId] = useState(0)\n\n  useEffect(() => {\n    props.fetchAllorder()\n  }, [props.orderList])\n  //\n  const onDelete = (id) => {\n    if (window.confirm('Are you sure you want to delete this Order?')) {\n      props.deleteOrder(id, () => {\n        window.alert('Order Deleted!')\n      })\n    }\n  }\n  return (\n    <>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Order No.</TableCell>\n            <TableCell>Customer</TableCell>\n            <TableCell>Payed With</TableCell>\n            <TableCell>Grand Total</TableCell>\n            <TableCell></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.orderList.map((item) => (\n            <TableRow key={item.orderMasterId}>\n              <TableCell>{item.orderNumber}</TableCell>\n              <TableCell>{item.customer.customerName}</TableCell>\n              <TableCell>{item.pMethod}</TableCell>\n              <TableCell>{item.gTotal}</TableCell>\n              <TableCell>\n                <ButtonGroup variant=\"text\">\n                  <Button>\n                    <Edit\n                      color=\"primary\"\n                      onClick={() => setCurrentId(item.orderMasterId)}\n                    />\n                  </Button>\n                  <Button>\n                    <Delete\n                      color=\"seconday\"\n                      onClick={() => onDelete(item.orderMasterId)}\n                    />\n                  </Button>\n                </ButtonGroup>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  orderList: state.orderReducer.list,\n})\nconst mapActionToProps = {\n  fetchAllorder: actions.fetchAllorder,\n  deleteOrder: actions.deleteOrder,\n}\n\nexport default connect(mapStateToProps, mapActionToProps)(OrderList)\n","import { createAPIEndpoint, ENDPIONTS } from '../api'\nimport { Action_Types } from '../constants'\n\nexport const fetchAllorder = () => (dispatch) => {\n  createAPIEndpoint(ENDPIONTS.ORDER)\n    .fetchAll()\n    .then((response) => {\n      dispatch({\n        type: Action_Types.FETCH_ALL_ORDER,\n        payload: response.data,\n      })\n    })\n    .catch((err) => console.log(err))\n}\n\nexport const CreateOrder = (data, onSucess) => (dispatch) => {\n  createAPIEndpoint(ENDPIONTS.ORDER)\n    .create(data)\n    .then((res) => {\n      dispatch({\n        type: Action_Types.CREATE_ORDER,\n        payload: res.data,\n      })\n      onSucess()\n    })\n    .catch((err) => console.log(err))\n}\n\nexport const updateOrder = (id, data, onSucess) => (dispatch) => {\n  createAPIEndpoint(ENDPIONTS.ORDER)\n    .update(id, data)\n    .then((res) => {\n      dispatch({\n        type: Action_Types.UPDATE_ORDER,\n        payload: res.data,\n      })\n      onSucess()\n    })\n    .catch((err) => console.log(err))\n}\n\nexport const deleteOrder = (id) => (dispatch) => {\n  createAPIEndpoint(ENDPIONTS.ORDER)\n    .delete(id)\n    .then((res) => {\n      dispatch({\n        type: Action_Types.DELETE_ORDER,\n        payload: id,\n      })\n    })\n    .catch((err) => console.log(err))\n}\n","import React from 'react'\nimport OOrderList from '../components/foods/OOrderList'\n\nexport default function About() {\n  return (\n    <>\n    <div>About</div>\n    <OOrderList />\n    </>\n  )\n}\n","import { Grid, TextField, Button, makeStyles } from '@material-ui/core'\nimport React, { useEffect } from 'react'\nimport { useForm } from '../../hooks/useForm'\nimport Form from '../../layouts/Form'\nimport { connect } from 'react-redux'\nimport * as actions from '../../redux/actions/userActions'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiFormControl-root': {\n      width: '100%',\n      margin: theme.spacing(1),\n    },\n  },\n  submitButtonGroup: {\n    width: '100%',\n    backgroundColor: '#718568',\n    color: '#000',\n    margin: theme.spacing(1),\n    '& .MuiButton-label': {\n      textTransform: 'none',\n    },\n    '&:hover': {\n      backgroundColor: '#f3b33d',\n    },\n  },\n}))\nconst initialValues = {\n  customerName: '',\n}\nfunction CustomerForm(props) {\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetFormControls,\n  } = useForm(initialValues)\n  const Classes = useStyles()\n\n  const validate = () => {\n    let temp = {}\n    temp.customerName = values.customerName ? '' : 'Customer Name is Required!'\n    // Other Validations\n    setErrors({ ...temp })\n    return Object.values(temp).every((x) => x == '')\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (validate()) {\n      if (props.currentId == 0) {\n        props.CreateUser(values, () => {\n          window.alert('User created')\n        })\n      } else {\n        props.updateUser(props.currentId, values, () => {\n          window.alert('User Updated!')\n        })\n      }\n    }\n    resetFormControls(initialValues)\n    props.setCurrentId(0)\n  }\n  // Side Effect\n  useEffect(() => {\n    if (props.currentId != 0)\n      setValues({\n        ...props.customerList.find((x) => x.customerID == props.currentId),\n      })\n  }, [props.currentId])\n\n  return (\n    <Form\n      autoComplete=\"off\"\n      noValidate\n      onSubmit={handleSubmit}\n      className={Classes.root}\n    >\n      <Grid item xs={6}>\n        <TextField\n          name=\"customerName\"\n          label=\"Customer Name\"\n          variant=\"outlined\"\n          value={values.customerName}\n          onChange={handleInputChange}\n          {...(errors.customerName && {\n            error: true,\n            helperText: errors.customerName,\n          })}\n        />\n        <div>\n          <Button\n            className={Classes.submitButtonGroup}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            {props.currentId == 0 ? 'Submit' : 'Update'}\n          </Button>\n        </div>\n      </Grid>\n    </Form>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  customerList: state.userReducer.list,\n})\nconst mapActionToProps = {\n  CreateUser: actions.CreateUser,\n  updateUser: actions.updateUser,\n}\n\nexport default connect(mapStateToProps, mapActionToProps)(CustomerForm)\n","import { createAPIEndpoint, ENDPIONTS } from '../api'\nimport { Action_Types } from '../constants'\n\nexport const fetchAllusers = () => (dispatch) => {\n  createAPIEndpoint(ENDPIONTS.CUSTOMER)\n    .fetchAll()\n    .then((response) => {\n      dispatch({\n        type: Action_Types.FETCH_ALL_USER,\n        payload: response.data,\n      })\n    })\n    .catch((err) => console.log(err))\n}\n\nexport const CreateUser = (data, onSucess) => (dispatch) => {\n  createAPIEndpoint(ENDPIONTS.CUSTOMER)\n    .create(data)\n    .then((response) => {\n      dispatch({\n        type: Action_Types.CREATE_USER,\n        payload: response.data,\n      })\n      onSucess()\n    })\n    .catch((err) => console.log(err))\n}\n\nexport const updateUser = (id, data, onSucess) => (dispatch) => {\n  createAPIEndpoint(ENDPIONTS.CUSTOMER)\n    .update(id, data)\n    .then((res) => {\n      dispatch({\n        type: Action_Types.UPDATE_USER,\n        payload: res.data,\n      })\n      onSucess()\n    })\n    .catch((err) => console.log(err))\n}\n\nexport const deleteUser = (id) => (dispatch) => {\n  createAPIEndpoint(ENDPIONTS.CUSTOMER)\n    .delete(id)\n    .then((res) => {\n      dispatch({\n        type: Action_Types.DELETE_USER,\n        payload: id,\n      })\n    })\n    .catch((err) => console.log(err))\n}\n","import {\n  Grid,\n  Paper,\n  TableContainer,\n  Table,\n  TableHead,\n  TableCell,\n  TableRow,\n  TableBody,\n  Avatar,\n  ButtonGroup,\n} from '@material-ui/core'\nimport React, { useState, useEffect } from 'react'\nimport CustomerForm from './CustomerForm'\nimport { connect } from 'react-redux'\nimport * as actions from '../../redux/actions/userActions'\nimport { Button } from '@material-ui/core'\nimport { Delete, Edit } from '@mui/icons-material'\nimport { Typography } from '@mui/material'\n//\nfunction Customer(props) {\n  const [currentId, setCurrentId] = useState(0)\n  useEffect(() => {\n    props.fetchAllusers()\n  }, [props.customerList])\n\n  // delete customer\n  const onDelete = (id) => {\n    if (window.confirm('Are you sure you want to delete this Customer?')) {\n      props.deleteUser(id, () => {\n        window.alert('Customer Deleted!')\n      })\n    }\n  }\n  return (\n    <Paper>\n      <Grid container>\n        <Grid item xs={6} align=\"center\">\n          <Typography gutterBottom variant=\"h3\">\n            Create new Customer\n          </Typography>\n          <CustomerForm {...{ currentId, setCurrentId }} />\n        </Grid>\n        <Grid item xs={6} align=\"center\">\n          <Typography gutterBottom variant=\"h3\" align=\"center\">\n            All Customer list\n          </Typography>\n\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>ID</TableCell>\n                  <TableCell>Name</TableCell>\n                  <TableCell>Avatar</TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {props.customerList.map((item, index) => {\n                  return (\n                    <TableRow key={index} hover>\n                      <TableCell> {item.customerID} </TableCell>\n                      <TableCell> {item.customerName} </TableCell>\n                      <TableCell>\n                        <Avatar\n                          src={item.customerAvator}\n                          alt={item.avatorImgSrc}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <ButtonGroup variant=\"text\">\n                          <Button>\n                            <Edit\n                              color=\"primary\"\n                              onClick={() => setCurrentId(item.customerID)}\n                            />\n                          </Button>\n                          <Button>\n                            <Delete\n                              color=\"seconday\"\n                              onClick={() => onDelete(item.customerID)}\n                            />\n                          </Button>\n                        </ButtonGroup>\n                      </TableCell>\n                    </TableRow>\n                  )\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n}\nconst mapStateToProps = (state) => ({\n  customerList: state.userReducer.list,\n})\nconst mapActionToProps = {\n  fetchAllusers: actions.fetchAllusers,\n  deleteUser: actions.deleteUser,\n}\n\nexport default connect(mapStateToProps, mapActionToProps)(Customer)\n","import React from 'react'\nimport Customer from '../../components/admin/Customer'\n\nexport default function CustomerPage() {\n  return <Customer />\n}\n","import { createAPIEndpoint, ENDPIONTS } from '../api'\nimport { Action_Types } from '../constants'\n\nexport const fetchAllfoods = () => (dispatch) => {\n  createAPIEndpoint(ENDPIONTS.FOODITEM)\n    .fetchAll()\n    .then((response) => {\n      dispatch({\n        type: Action_Types.FETCH_ALL_FOOD,\n        payload: response.data,\n      })\n    })\n    .catch((err) => console.log(err))\n}\n\nexport const CreateFood = (data, onSucess) => (dispatch) => {\n  createAPIEndpoint(ENDPIONTS.FOODITEM)\n    .create(data)\n    .then((res) => {\n      dispatch({\n        type: Action_Types.CREATE_FOOD,\n        payload: res.data,\n      })\n      onSucess()\n    })\n    .catch((err) => console.log(err))\n}\n\nexport const updateFood = (id, data, onSucess) => (dispatch) => {\n  createAPIEndpoint(ENDPIONTS.FOODITEM)\n    .update(id, data)\n    .then((res) => {\n      dispatch({\n        type: Action_Types.UPDATE_FOOD,\n        payload: res.data,\n      })\n      onSucess()\n    })\n    .catch((err) => console.log(err))\n}\n\nexport const deleteFood = (id) => (dispatch) => {\n  createAPIEndpoint(ENDPIONTS.FOODITEM)\n    .delete(id)\n    .then((res) => {\n      dispatch({\n        type: Action_Types.DELETE_FOOD,\n        payload: id,\n      })\n    })\n    .catch((err) => console.log(err))\n}\n","import { Grid, TextField, Button, makeStyles } from '@material-ui/core'\nimport React, { useEffect } from 'react'\nimport { useForm } from '../../hooks/useForm'\nimport Form from '../../layouts/Form'\nimport { connect } from 'react-redux'\nimport * as actions from '../../redux/actions/foodActions'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiFormControl-root': {\n      width: '100%',\n      margin: theme.spacing(1),\n    },\n  },\n  submitButtonGroup: {\n    width: '100%',\n    backgroundColor: '#718568',\n    color: '#000',\n    margin: theme.spacing(1),\n    '& .MuiButton-label': {\n      textTransform: 'none',\n    },\n    '&:hover': {\n      backgroundColor: '#f3b33d',\n    },\n  },\n}))\n\nconst refresh = {\n  foodItemName: '',\n  foodMainImgName: '',\n  price: 0,\n}\n\nfunction FoodsForm(props) {\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetFormControls,\n  } = useForm(refresh)\n  const Classes = useStyles()\n\n  const validate = () => {\n    let temp = {}\n    temp.foodItemName = values.foodItemName ? '' : 'FoodItem Name is Required!'\n    // Other Validations\n    setErrors({ ...temp })\n    return Object.values(temp).every((x) => x == '')\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (validate()) {\n      console.log('Errors: ', errors)\n      console.log('isValid', validate())\n      console.log('current Id: ', props.currentId)\n      console.log('values: ', values)\n      if (props.currentId == 0) {\n        props.CreateFood(values, () => {\n          window.alert('FoodItem created')\n        })\n      } else {\n        props.updateFood(props.currentId, values, () => {\n          window.alert('FoodItem Updated!')\n        })\n      }\n    }\n    resetFormControls(refresh)\n    props.setCurrentId(0)\n  }\n  // Side Effect\n  useEffect(() => {\n    if (props.currentId != 0)\n      setValues({\n        ...props.foodList.find((x) => x.foodItemId == props.currentId),\n      })\n  }, [props.currentId])\n\n  return (\n    <Form\n      autoComplete=\"off\"\n      noValidate\n      onSubmit={handleSubmit}\n      className={Classes.root}\n    >\n      <Grid item xs={6}>\n        <TextField\n          name=\"foodItemName\"\n          label=\"FoodItem Name\"\n          variant=\"outlined\"\n          value={values.foodItemName}\n          onChange={handleInputChange}\n          {...(errors.foodItemName && {\n            error: true,\n            helperText: errors.foodItemName,\n          })}\n        />\n        <TextField\n          name=\"foodMainImgName\"\n          label=\"Food Image Name\"\n          variant=\"outlined\"\n          value={values.foodMainImgName}\n          onChange={handleInputChange}\n          {...(errors.foodMainImgName && {\n            error: true,\n            helperText: errors.foodMainImgName,\n          })}\n        />\n        <TextField\n          name=\"price\"\n          label=\"Price\"\n          variant=\"outlined\"\n          value={values.price}\n          onChange={handleInputChange}\n          {...(errors.price && {\n            error: true,\n            helperText: errors.price,\n          })}\n        />\n      \n        <div>\n          <Button\n            className={Classes.submitButtonGroup}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            {props.currentId == 0 ? 'Submit' : 'Update'}\n          </Button>\n        </div>\n      </Grid>\n    </Form>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  foodList: state.foodReducer.list,\n})\nconst mapActionToProps = {\n  CreateFood: actions.CreateFood,\n  updateFood: actions.updateFood,\n}\n\nexport default connect(mapStateToProps, mapActionToProps)(FoodsForm)\n","import {\n  Grid,\n  Paper,\n  TableContainer,\n  Table,\n  TableHead,\n  TableCell,\n  TableRow,\n  TableBody,\n  Avatar,\n  ButtonGroup,\n} from '@material-ui/core'\nimport React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../redux/actions/foodActions'\nimport { Button } from '@material-ui/core'\nimport { Delete, Edit } from '@mui/icons-material'\nimport { createAPIEndpoint, ENDPIONTS } from '../../redux/api'\nimport { Typography } from '@mui/material'\nimport FoodsForm from './FoodsForm'\n\n//\nfunction Foods(props) {\n  const [currentId, setCurrentId] = useState(0)\n  useEffect(() => {\n    props.fetchAllfoods()\n  }, [props.foodList])\n\n  // delete FoodItem\n  const onDelete = (id) => {\n    if (window.confirm('Are you sure you want to delete this FoodItem?')) {\n      props.deleteFood(id, () => {\n        window.alert('FoodItem Deleted!')\n      })\n    }\n  }\n  return (\n    <Paper>\n      <Grid container>\n        <Grid item xs={6} align=\"center\">\n          <Typography gutterBottom variant=\"h3\">\n            Create new FoodItem\n          </Typography>\n          <FoodsForm {...{ currentId, setCurrentId }} />\n        </Grid>\n        <Grid item xs={6} align=\"center\">\n          <Typography gutterBottom variant=\"h3\" align=\"center\">\n            All FoodItem list\n          </Typography>\n\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>ID</TableCell>\n                  <TableCell>FoodItem Name</TableCell>\n                  <TableCell>Price</TableCell>\n                  <TableCell>Image</TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {props.foodList.map((item, index) => {\n                  return (\n                    <TableRow key={index} hover>\n                      <TableCell> {item.foodItemId} </TableCell>\n                      <TableCell> {item.foodItemName} </TableCell>\n                      <TableCell> ${item.price} </TableCell>\n                      <TableCell>\n                        <Avatar\n                          src={item.foodMainImgName}\n                          alt={item.foodMainImgSrc}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <ButtonGroup variant=\"text\">\n                          <Button>\n                            <Edit\n                              color=\"primary\"\n                              onClick={() => setCurrentId(item.foodItemId)}\n                            />\n                          </Button>\n                          <Button>\n                            <Delete\n                              color=\"seconday\"\n                              onClick={() => onDelete(item.foodItemId)}\n                            />\n                          </Button>\n                        </ButtonGroup>\n                      </TableCell>\n                    </TableRow>\n                  )\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n}\nconst mapStateToProps = (state) => ({\n  foodList: state.foodReducer.list,\n})\nconst mapActionToProps = {\n  fetchAllfoods: actions.fetchAllfoods,\n  deleteFood: actions.deleteFood,\n}\n\nexport default connect(mapStateToProps, mapActionToProps)(Foods)\n","import React from 'react'\nimport Foods from '../../components/admin/Foods'\n\nexport default function FoodsPage() {\n  return <Foods />\n}\n","\nimport './App.css'\nimport { BrowserRouter, Routes, Route } from 'react-router-dom'\nimport Layout from './pages/Layout'\nimport HomePage from './pages/HomePage'\nimport About from './pages/About'\n\nimport CustomerPage from './pages/admin/CustomerPage'\nimport FoodsPage from './pages/admin/FoodsPage'\n\nfunction App() {\n  return (\n    <>\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<Layout />}>\n            <Route index element={<HomePage />} />\n            <Route path=\"about\" element={<About />} />\n            <Route path=\"admin/foods\" element={<FoodsPage />} />\n            <Route path=\"admin/customers\" element={<CustomerPage />} />\n          </Route>\n        </Routes>\n      </BrowserRouter>\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Action_Types } from '../constants'\n\nconst initialState = {\n  list: [],\n}\n\nexport const foodReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case Action_Types.FETCH_ALL_FOOD:\n      return {\n        ...state,\n        list: [...action.payload],\n      }\n    case Action_Types.CREATE_FOOD:\n      return {\n        ...state,\n        list: [...state.list, action.payload],\n      }\n    case Action_Types.UPDATE_FOOD:\n      return {\n        ...state,\n        list: state.list.map((x) =>\n          x.id == action.payload.id ? action.payload : x\n        ),\n      }\n    case Action_Types.DELETE_FOOD:\n      return {\n        ...state,\n        list: state.list.filter((x) => x.id != action.payload),\n      }\n\n    default:\n      return state\n  }\n}\n","import { Action_Types } from '../constants'\n\nconst initialState = {\n  list: [],\n}\n\nexport const userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case Action_Types.FETCH_ALL_USER:\n      return {\n        ...state,\n        list: [...action.payload],\n      }\n    case Action_Types.CREATE_USER:\n      return {\n        ...state,\n        list: [...state.list, action.payload],\n      }\n    case Action_Types.UPDATE_USER:\n      return {\n        ...state,\n        list: state.list.map((x) =>\n          x.id == action.payload.id ? action.payload : x\n        ),\n      }\n    case Action_Types.DELETE_USER:\n      return {\n        ...state,\n        list: state.list.filter((x) => x.customerID != action.payload),\n      }\n\n    default:\n      return state\n  }\n}\n","import { Action_Types } from '../constants'\n\nconst initialState = {\n  list: [],\n}\n\nexport const orderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case Action_Types.FETCH_ALL_ORDER:\n      return {\n        ...state,\n        list: [...action.payload],\n      }\n    case Action_Types.CREATE_ORDER:\n      return {\n        ...state,\n        list: [...state.list, action.payload],\n      }\n    case Action_Types.UPDATE_ORDER:\n      return {\n        ...state,\n        list: state.list.map((x) =>\n          x.id == action.payload.id ? action.payload : x\n        ),\n      }\n    case Action_Types.DELETE_ORDER:\n      return {\n        ...state,\n        list: state.list.filter((x) => x.customerID != action.payload),\n      }\n\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { foodReducer } from './foodReducer'\nimport { userReducer } from './userReducer'\nimport { orderReducer  } from './orderReducer'\n\nexport const reducers = combineReducers({\n  foodReducer,\n  userReducer,\n  orderReducer,\n})\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { reducers } from './reducers'\n\n\n\nlet initialState = {\n\n}\n\nconst middlware = [thunk]\nconst store = createStore(\n  reducers,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middlware))\n)\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport  store  from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}